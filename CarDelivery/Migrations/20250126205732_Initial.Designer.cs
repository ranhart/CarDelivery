// <auto-generated />
using CarDelivery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarDelivery.Migrations
{
    [DbContext(typeof(CarDeliveryContext))]
    [Migration("20250126205732_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarDelivery.Models.Car", b =>
                {
                    b.Property<int>("Carid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("carid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Carid"));

                    b.Property<int>("Complectationid")
                        .HasColumnType("integer")
                        .HasColumnName("complectationid");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("make");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("model");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.HasKey("Carid")
                        .HasName("cars_pkey");

                    b.HasIndex("Complectationid");

                    b.ToTable("cars", (string)null);
                });

            modelBuilder.Entity("CarDelivery.Models.Complectation", b =>
                {
                    b.Property<int>("Complectationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("complectationid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Complectationid"));

                    b.Property<string>("Engine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("engine");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("equipment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Complectationid")
                        .HasName("complectations_pkey");

                    b.ToTable("complectations", (string)null);
                });

            modelBuilder.Entity("CarDelivery.Models.Order", b =>
                {
                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Orderid"));

                    b.Property<int>("Carid")
                        .HasColumnType("integer")
                        .HasColumnName("carid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int>("Userid")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("Orderid")
                        .HasName("orders_pkey");

                    b.HasIndex("Carid");

                    b.HasIndex("Userid");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("CarDelivery.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Userid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Userid")
                        .HasName("users_pkey");

                    b.HasIndex(new[] { "Email" }, "users_email_key")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CarDelivery.Models.Car", b =>
                {
                    b.HasOne("CarDelivery.Models.Complectation", "Complectation")
                        .WithMany("Cars")
                        .HasForeignKey("Complectationid")
                        .IsRequired()
                        .HasConstraintName("cars_complectationid_fkey");

                    b.Navigation("Complectation");
                });

            modelBuilder.Entity("CarDelivery.Models.Order", b =>
                {
                    b.HasOne("CarDelivery.Models.Car", "Car")
                        .WithMany("Orders")
                        .HasForeignKey("Carid")
                        .IsRequired()
                        .HasConstraintName("orders_carid_fkey");

                    b.HasOne("CarDelivery.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Userid")
                        .IsRequired()
                        .HasConstraintName("orders_userid_fkey");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarDelivery.Models.Car", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CarDelivery.Models.Complectation", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarDelivery.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
